%% dyanmicEndocastBeta
%%Calculates a series of alphashape hulls from a time series of XYZ
%%points exported from maya, and exports them as a series of obj files
%%(plus a csv file of alphashape volumes for each time point).

%%Majority of the code written by Peter Falkingham; ui windows and other details added by
%%Ariel Camp.

%% Import 3D points
[FileName,PathName] = uigetfile('*.csv','Select volume xyz coordinates');
cd(PathName);
XYZfile = csvread(FileName,1,0); %column 1 = frame number, column 2-end = XYZ coordinates from volume locators
FrameNumbers = XYZfile(:,1); %frame numbers from Maya
if XYZfile(:,end) == 0 %check if there's an extra column of zeros
    lastCol = size(XYZfile,2)-1;
else lastCol = size(XYZfile,2);
end
XYZpoints = XYZfile(:,2:lastCol);%xyz coordinates from Maya.

%Number of frames:
nframes = size(XYZpoints,1);
npoints = size(XYZpoints,2)/3; %total number of columns, divided by three
hullpoints = zeros(npoints,3);
alphavolume = zeros(nframes,2);
hullvolume = zeros(nframes,2);

folderName = uigetdir(PathName,'Select Folder for obj files');
strikename = (FileName);
% folderName = ([(strikename),' Objs']);
% [status, msg, msgID] = mkdir (folderName) %makes folder to hold obj files in the current directory
%pname = (['/Users/Ariel/OneDrive/Documents/Work/Current Projects/Catfish XROMM/XROMM Data and Analysis/Cat_05/Dec_17_2016_Cat_05/Dec_17_2016_Cat_05_Trial_03/',(folderName)]);
cd(folderName); %sets obj folder as current directory

%This part written mostly by Peter Falkingham
for x=1:nframes
    framename = num2str(FrameNumbers(x,1));
    for y=1:npoints
        hullpoints(y,:) = XYZpoints(x,y*3-2:y*3);
    end
    [uniquepoints,ia,ic] = unique(hullpoints,'rows','stable'); %deletes duplicate XYZpoints
    alphaK = (ia);
    n=2; %This is the value that determines the maximum radius of curvature, I believe.
    shp = alphaShape(uniquepoints,n);
    [tri,P] = alphaTriangulation(shp); %triangulation that defines the domain of the alpha shape
    [bf,P] = boundaryFacets(shp); %facets that make up the boundary of the alpha shape
    totalvol = volume(shp);
%     [V,S] = alphavol(hullpoints,n); %calculates volume
    [K,v] = convhull(uniquepoints); %calculates idices of the points that comprise the facets of the convex hull
    alphavolume(x,1) = FrameNumbers(x,1); %frame number
    alphavolume(x,2) = totalvol; %volume of alpha shape (cm^3)
    hullvolume(x,1) = FrameNumbers(x,1); %frame number
    hullvolume(x,2) = v; %volume of convex hull (cm^3)
%Export alphaShape as .obj file (adapted from From Bill's "calculate_convex_hull.m"):
    surfname = ['Alpha_',(framename),'_Hull',];
    fout = fopen(fullfile(folderName, [surfname '.obj']), 'w');
    fprintf(fout, '# alpha shape generated by matlab alphaShape\n');
    fprintf(fout, '%g\n', totalvol);
    fprintf(fout, '%g\n', (FrameNumbers(x,1)));
%     fprintf(fout, '# volume = %g\n', totalvol);
%     fprintf(fout, '# frame = %g\n', (FrameNumbers(x,1)));
%From Bill's "calculate_convex_hull.m":
    group = strrep(surfname, ' ', '_');
    fprintf(fout, 'g %s\n', group);
    fprintf(fout, 'o %s\n', group);
    
    % vertices first
    [r, l] = size(bf);%r = total number of rows; l= total number of columns
    vertex_list = [];%creates empty variable named "vertex_list"
    for i = 1: r %for each row...
        for j = 1: l %for each column...
        vertex = bf(i, j); %index of a single vertex coordinate
        index = find(vertex_list == vertex);
            if (isempty(index))
                vertex_list(end + 1) = vertex;%only contains unique vertex coordinates
                fprintf(fout, 'v %.10f %.10f %.10f\n', P(vertex,1), P(vertex,2), P(vertex,3));
            end
        end
    end
    
    % now faces
    use_relative = 1;
    for i = 1: r
        fprintf(fout, 'f');
        for j = 1: l
            vertex = bf(i, j);
            index = find(vertex_list == vertex);        
            if (isempty(index))
                disp('Error finding vertex')
                exit;
            else
                if (use_relative == 0)
            % using the absolute indexing system
                    fprintf(fout, ' %d', index(1));
                else
            % using the slightly more complex relative format
                    fprintf(fout, ' %d', index(1) - length(vertex_list) - 1);
                end
            end
        end
        fprintf(fout, '\n');
    end
    fclose(fout);
%     vrml(gcf,(surfname));
end

%Save dataset of volumes (col 2) and frame number (col 1)
[VolumeFile,VolumePath] = uiputfile('*.csv','Save volume data as');
cd(VolumePath);
csvwrite(VolumeFile,alphavolume);


%Graph alpha shape
figure
plot(shp)

% %Graph convex hull
%     figure %3D plot of XYZ points
%     hold on
%     scatter3(hullpoints(:,1),hullpoints(:,2),hullpoints(:,3)) 
%     trisurf(K,hullpoints(:,1),hullpoints(:,2),hullpoints(:,3));

%Graph volume over time    
figure
subplot(1,2,1);
plot(FrameNumbers(:,1),alphavolume(:,2), 'k');
xlabel ('Frame Number');
ylabel ('Volume (cm^3)');
title ([(num2str(n)),'AlphaHull Volume']);
subplot(1,2,2);
alphavolumeR = zeros(size(alphavolume,1),1);
for a = 1:size(alphavolume, 1)
    alphavolumeR(a,1) = alphavolume(a,2)-alphavolume(1,2);
end
plot(FrameNumbers(:,1),alphavolumeR(:,1), 'k');
xlabel ('Frame Number');
ylabel ('Volume (cm^3) relative to initial');
title ([(num2str(n)),'AlphaHull Relative Volume']);

